{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKSPACE\\\\tutorial-react\\\\src\\\\MasterForm.js\";\nimport React from 'react';\nimport FormStep1 from './FormStep1';\nimport FormStep2 from './FormStep2';\nimport FormStep3 from './FormStep3';\n\nclass MasterForm extends React.Component {\n  constructor(props) {\n    super(props); // Set the initial input values\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            username = _this$state.username,\n            password = _this$state.password;\n      alert(\"Your registration detail: \\n \\n          Email: \".concat(email, \" \\n \\n          Username: \").concat(username, \" \\n\\n          Password: \").concat(password));\n    };\n\n    this.state = {\n      currentStep: 1,\n      // Default is Step 1\n      email: '',\n      username: '',\n      password: '' // Bind the submission to handleChange() \n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this._next = this._next.bind(this);\n    this._prev = this._prev.bind(this);\n  } // _next and _previous functions will be called on button click\n\n\n  _next() {\n    let currentStep = this.state.currentStep; // If the current step is 1 or 2, then add one on \"next\" button click\n\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  _prev() {\n    let currentStep = this.state.currentStep; // If the current step is 2 or 3, then subtract one on \"previous\" button click\n\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  } // Use the submitted data to set the state\n\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  } // Trigger an alert on form submission\n\n\n  // The \"next\" and \"previous\" button functions\n  get previousButton() {\n    let currentStep = this.state.currentStep; // If the current step is not 1, then render the \"previous\" button\n\n    if (currentStep !== 1) {\n      return React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        type: \"button\",\n        onClick: this._prev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Previous\");\n    } // ...else return nothing\n\n\n    return null;\n  }\n\n  get nextButton() {\n    let currentStep = this.state.currentStep; // If the current step is not 3, then render the \"next\" button\n\n    if (currentStep < 3) {\n      return React.createElement(\"button\", {\n        className: \"btn btn-primary float-right\",\n        type: \"button\",\n        onClick: this._next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Next\");\n    } // ...else render nothing\n\n\n    return null;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"A Wizard Form!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Step \", this.state.currentStep, \" \"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Render the form steps and pass in the required props\", React.createElement(FormStep1, {\n      currentStep: this.state.currentStep,\n      handleChange: this.handleChange,\n      email: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(FormStep2, {\n      currentStep: this.state.currentStep,\n      handleChange: this.handleChange,\n      username: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(FormStep3, {\n      currentStep: this.state.currentStep,\n      handleChange: this.handleChange,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), this.previousButton, this.nextButton));\n  }\n\n}\n\nexport default MasterForm;","map":{"version":3,"sources":["D:\\WORKSPACE\\tutorial-react\\src\\MasterForm.js"],"names":["React","FormStep1","FormStep2","FormStep3","MasterForm","Component","constructor","props","handleSubmit","event","preventDefault","state","email","username","password","alert","currentStep","handleChange","bind","_next","_prev","setState","target","name","value","previousButton","nextButton","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormStep1 from './FormStep1';\r\nimport FormStep2 from './FormStep2';\r\nimport FormStep3 from './FormStep3';\r\n\r\nclass MasterForm extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // Set the initial input values\r\n        this.state = {\r\n          currentStep: 1, // Default is Step 1\r\n          email: '',\r\n          username: '',\r\n          password: '', \r\n        }\r\n        // Bind the submission to handleChange() \r\n        this.handleChange = this.handleChange.bind(this)\r\n        this._next = this._next.bind(this)\r\n        this._prev = this._prev.bind(this)\r\n      }\r\n        // _next and _previous functions will be called on button click\r\n  _next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 2? 3: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep\r\n    })\r\n  }\r\n    \r\n  _prev() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep\r\n    })\r\n  }\r\n    \r\n      // Use the submitted data to set the state\r\n      handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n          [name]: value\r\n        })    \r\n      }\r\n      \r\n      // Trigger an alert on form submission\r\n      handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const { email, username, password } = this.state\r\n        alert(`Your registration detail: \\n \r\n          Email: ${email} \\n \r\n          Username: ${username} \\n\r\n          Password: ${password}`)\r\n      }\r\n\r\n      // The \"next\" and \"previous\" button functions\r\nget previousButton(){\r\n    let currentStep = this.state.currentStep;\r\n    // If the current step is not 1, then render the \"previous\" button\r\n    if(currentStep !==1){\r\n      return (\r\n        <button \r\n          className=\"btn btn-secondary\" \r\n          type=\"button\" onClick={this._prev}>\r\n        Previous\r\n        </button>\r\n      )\r\n    }\r\n    // ...else return nothing\r\n    return null;\r\n  }\r\n  \r\n  get nextButton(){\r\n    let currentStep = this.state.currentStep;\r\n    // If the current step is not 3, then render the \"next\" button\r\n    if(currentStep <3){\r\n      return (\r\n        <button \r\n          className=\"btn btn-primary float-right\" \r\n          type=\"button\" onClick={this._next}>\r\n        Next\r\n        </button>        \r\n      )\r\n    }\r\n    // ...else render nothing\r\n    return null;\r\n  }\r\n\r\nrender(){\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <h1>A Wizard Form!</h1>\r\n        <p>Step {this.state.currentStep} </p> \r\n          \r\n        <form onSubmit={this.handleSubmit}>\r\n        \r\n         Render the form steps and pass in the required props\r\n          <FormStep1 \r\n            currentStep={this.state.currentStep} \r\n            handleChange={this.handleChange}\r\n            email={this.state.email}\r\n          />\r\n          <FormStep2 \r\n            currentStep={this.state.currentStep} \r\n            handleChange={this.handleChange}\r\n            username={this.state.username}\r\n          />\r\n          <FormStep3 \r\n            currentStep={this.state.currentStep} \r\n            handleChange={this.handleChange}\r\n            password={this.state.password}\r\n          />       \r\n            {this.previousButton}\r\n            {this.nextButton}\r\n        </form>\r\n        </React.Fragment>\r\n      )\r\n\r\n}\r\n\r\n}\r\n\r\nexport default MasterForm;"]},"metadata":{},"sourceType":"module"}